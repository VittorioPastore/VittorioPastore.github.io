---
// src/pages/index.astro
import Layout from '../layouts/Layout.astro';
import AnimatedButton from '../components/AnimatedButton';
import GitHubFeed from '../components/GitHubFeed';
import FunnyFeed from '../components/FunnyFeed';

const skills = [
  { name: 'Python', projects: ['neural-trader', 'squeaky-greyhound'] },
  { name: 'PyTorch', projects: ['neural-trader'] },
  { name: 'TensorFlow', projects: ['neural-trader'] },
  { name: 'ROS', projects: ['squeaky-greyhound'] },
  { name: 'Raisim', projects: ['squeaky-greyhound'] },
  { name: 'Controls Theory', projects: ['controls-ios-application', 'nawcad'] },
  { name: 'C++', projects: ['squeaky-greyhound'] },
  { name: 'Embodied AI', projects: ['mailclient'] }
];

const projects = {
  'mailclient': {
    title: 'Prysm Mail',
    description: 'A new type of email client leveraging local LLMs for enhanced privacy and user experience.',
    skills: ['Swift', 'CoreML', 'Embodied AI', 'Natural Language Processing'],
    href: '/mailclient'
  },
  'squeaky-greyhound': {
    title: 'Squeaky and Greyhound',
    description: 'A 3D printed quadruped robot project featuring advanced inverse kinematics and a sleek mechanical design for enhanced mobility.',
    skills: ['Python', 'ROS', 'Raisim', 'C++'],
    href: '/squeaky-greyhound'
  },
  'nawcad': {
    title: 'Senior Design: NAWCAD',
    description: 'Integrated test stand system design connecting mechanical engineering with a drone\'s flight stack using a custom Matlab GUI.',
    skills: ['Controls Theory', 'Matlab'],
    href: '/nawcad'
  },
  'controls-ios-application': {
    title: 'Controls IOS Application',
    description: 'A personal project experimenting with PID control, Apple\'s Swift language, and custom UI design for simulating control systems.',
    skills: ['Controls Theory', 'Swift'],
    href: '/controls-ios-application'
  },
  'neural-trader': {
    title: 'Neural Trader (AI Project)',
    description: 'A neural network based financial advisor built with Matlab\'s Neural Network Toolbox and Python for data scraping and analysis.',
    skills: ['Python', 'PyTorch', 'TensorFlow'],
    href: '/neural-trader'
  },
  'website': {
    title: 'This Website',
    description: 'Yes, I made this website from scratch! No online website builders here. Check out the source code on GitHub.',
    skills: ['Web Development', 'JavaScript', 'Astro'],
    href: '/website'
  }
};
---

<Layout title="Vittorio Pastore - Portfolio">
  <main class="container mx-auto px-4 py-16 relative z-10">
    <!-- Hero Section -->
    <section class="flex flex-col items-center justify-center min-h-[80vh] text-center relative">
      <div class="glass p-12 rounded-3xl max-w-3xl mx-auto relative overflow-hidden float">
        <div class="absolute inset-0 bg-gradient-to-r from-purple-500/10 to-pink-500/10 pointer-events-none"></div>
        <h1 class="text-5xl md:text-7xl font-bold mb-8">
          Hi, I'm <span class="text-gradient">Vittorio</span>
        </h1>
        <p class="text-xl md:text-2xl mb-10 text-gray-200">
          Robotics Researcher at Virginia Tech. <br/>
          Passionate about Reinforcement Learning, Music, and Photography
        </p>
        <div class="flex gap-6 justify-center">
          <AnimatedButton text="View Projects" href="#projects" client:load class="w-40"/>
          <AnimatedButton text="Contact Me" href="#contact" client:load class="w-40"/>
        </div>
      </div>
    </section>

    <!-- Skills Section -->
    <section class="my-32">
      <h2 class="text-4xl font-bold text-center mb-16">Skills & Technologies</h2>
      <div class="grid grid-cols-2 md:grid-cols-4 gap-8">
        {skills.map(skill => (
          <button
            class="glass p-6 rounded-2xl text-center hover:bg-white/20 transition-all duration-500 transform hover:-translate-y-2 h-20 flex items-center justify-center cursor-pointer"
            data-skill={skill.name}
          >
            <span class="text-lg font-medium">{skill.name}</span>
          </button>
        ))}
      </div>
    </section>

    <!-- Projects Section -->
    <section id="projects" class="my-32">
      <h2 class="text-4xl font-bold text-center mb-16">Featured Projects</h2>
      <div class="grid md:grid-cols-2 gap-10">
        {Object.entries(projects).map(([id, project]) => (
          <div 
            id={`project-${id}`}
            class={`glass p-8 rounded-3xl hover:bg-white/20 transition-all duration-500 group relative ${id === 'mailclient' ? 'ai-gradient-border' : ''}`}
            data-skills={project.skills.join(',')}
          >
            <h3 class="text-2xl font-bold mb-4 text-gradient">{project.title}</h3>
            <p class="text-gray-200 mb-4 leading-relaxed">
              {project.description}
            </p>
            <div class="flex flex-wrap gap-2 mb-6">
              {project.skills.map(skill => (
                <span class="text-sm px-3 py-1 rounded-full bg-white/10">
                  {skill}
                </span>
              ))}
            </div>
            <AnimatedButton text="View Project" href={project.href} client:load />
          </div>
        ))}
      </div>
    </section>

    <!-- Activity Feeds Section -->
    <section class="my-16 md:my-32">
      <h2 class="text-3xl md:text-4xl font-bold text-center mb-12">Recent Activity</h2>
      <div class="grid md:grid-cols-2 gap-8">
        <GitHubFeed client:load />
        <FunnyFeed client:load />
      </div>
    </section>    

    <!-- Contact Section -->
    <section id="contact" class="my-32">
      <div class="glass p-12 rounded-3xl max-w-2xl mx-auto relative overflow-hidden">
        <div class="absolute inset-0 bg-gradient-to-b from-purple-500/10 to-pink-500/10 pointer-events-none"></div>
        <h2 class="text-4xl font-bold text-center mb-12">Get In Touch</h2>
        <div class="flex flex-col gap-6 items-center justify-center">
          <div class="flex flex-row gap-6 items-center justify-center">
            <AnimatedButton text="LinkedIn" href="https://www.linkedin.com/in/vittorio-pastore-6474691b1/" client:load />
            <AnimatedButton text="GitHub" href="https://github.com/VittorioPastore" client:load />
          </div>
          <AnimatedButton text="Email Me" href="mailto:vitto@vt.edu" client:load />
        </div>
      </div>
    </section>
  </main>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const skillButtons = document.querySelectorAll('[data-skill]');
    skillButtons.forEach(button => {
      button.addEventListener('click', () => {
        const skillName = button.getAttribute('data-skill');
        highlightProjects(skillName);
      });
    });
  });

  function highlightProjects(skillName) {
    // Remove any existing highlights
    document.querySelectorAll('[id^="project-"]').forEach(project => {
      project.classList.remove('highlight');
      project.style.transform = 'scale(1)';
    });
    
    // Find projects with matching skills
    const projectElements = document.querySelectorAll(`[data-skills*="${skillName}"]`);
    
    if (projectElements.length > 0) {
      // Scroll to the first matching project
      projectElements[0].scrollIntoView({ behavior: 'smooth', block: 'center' });
      
      // Highlight matching projects
      projectElements.forEach(project => {
        project.classList.add('highlight');
        project.style.transform = 'scale(1.05)';
        
        // Remove highlight after a few seconds
        setTimeout(() => {
          project.classList.remove('highlight');
          project.style.transform = 'scale(1)';
        }, 2000); // 2 seconds
      });
    }
  }
</script>
<style>
  .highlight {
    box-shadow: 0 0 20px rgb(138, 142, 255, 0.3);
    transition: all 0.5s ease;
  }

  /* AI Rainbow Gradient Border for MailClient */
  .ai-gradient-border {
    position: relative;
    border: 2px solid transparent;
    background-clip: padding-box;
  }

  .ai-gradient-border::before {
    content: '';
    position: absolute;
    inset: -2px;
    border-radius: 28px; /* slightly larger than the rounded-3xl (24px) */
    padding: 2px;
    background: linear-gradient(
      45deg,
      rgba(255, 0, 150, 0.4),   /* Pink */
      rgba(0, 204, 255, 0.4),   /* Cyan */
      rgba(128, 0, 255, 0.4),   /* Purple */
      rgba(255, 204, 0, 0.4),   /* Yellow */
      rgba(255, 0, 150, 0.4)    /* Pink again for smooth loop */
    );
    background-size: 300% 300%;
    animation: aiGradientShift 8s ease-in-out infinite;
    z-index: -1;
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
  }

  .ai-gradient-border:hover::before {
    animation-duration: 4s;
  }

  @keyframes aiGradientShift {
    0%, 100% {
      background-position: 0% 0%;
    }
    25% {
      background-position: 100% 0%;
    }
    50% {
      background-position: 100% 100%;
    }
    75% {
      background-position: 0% 100%;
    }
  }
</style>
